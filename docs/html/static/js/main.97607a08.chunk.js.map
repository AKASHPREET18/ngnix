{"version":3,"sources":["components/ActionComponent/Enums.ts","components/ActionComponent/ActionGuards.ts","components/DetailComponent/Enums.ts","components/DetailComponent/DetailComponent.tsx","components/RichTextComponent/Enums.ts","components/DetailComponent/DetailGuard.ts","containers/DetailContainer/DetailListItem.tsx","containers/DetailContainer/DetailList.tsx","components/RichTextComponent/RichTextComponent.tsx","components/Row/Enums.ts","components/Row/RowGuards.ts","containers/TextAreaContainer/TextAreaListItem.tsx","components/Row/Text.tsx","components/Row/TextArea.tsx","containers/TextContainer/TextListItem.tsx","components/OuterBodyComponent/OuterComponent.tsx","containers/OuterContainer/SectionList.tsx","containers/OuterContainer/OuterContainer.tsx","components/OuterBodyComponent/actions/OuterBody.ts","components/OuterBodyComponent/reducers/OuterBody.ts","reducers.ts","store.ts","components/OuterBodyComponent/dataReceiver/OuterBody.tsx","App.tsx","index.tsx"],"names":["TextActionTypeEnum","DetailTypeEnum","isActionOpenUrl","action","type","OPEN_URL","isAction","undefined","RichTextTypeEnum","DetailComponent","_ref","detail","react_default","a","createElement","detailText","TEXT","text","detailImage","IMAGE","Img","src","imageUrl","alt","detailList","LIST","texts","map","index","key","styled","img","_templateObject","DetailListItem","detailData","DetailComponent_DetailComponent","Object","assign","DetailList","details","length","DetailData","DetailListItem_DetailListItem","RowTypeEnum","div","RichTextComponent_templateObject","h3","_templateObject2","_templateObject3","p","_templateObject4","_templateObject5","props","isTextArea","textDefinition","TEXT_AREA","isTextTile","TextAreaListItem","textData","TextAreaListItem_DIV","TextArea_TextAreaModule","textarea","DIV","TextAreaListItem_templateObject","TextModule","onClickPropFn","onClick","_useState","useState","_useState2","slicedToArray","setDetails","Text_DIV","Text","onClickApi","event","Text_H3","title","Text_P","stopPropagation","thumbnailUrl","Text_Img","DetailList_DetailList","Text_templateObject","H3","Text_templateObject2","Text_templateObject3","P","Text_templateObject4","Text_templateObject5","TextAreaModule","TextArea","TextArea_templateObject","TextListItem","Text_TextModule","preventDefault","window","location","href","url","OuterComponent","row","TextListItem_TextListItem","TextAreaListItem_TextAreaListItem","SectionList_templateObject","StyledButton","button","SectionList_templateObject2","SectionList","section","rows","SectionList_P","header","OuterComponent_OuterComponent","OuterContainer","outerbody","OuterContainer_DIV","H1","sections","idx","OuterContainer_SectionList","h2","OuterContainer_templateObject","OuterContainer_templateObject2","OUTERBODY_REQUEST","OUTERBODY_ERROR","errorOuterBody","error","payload","OUTERBODY_SUCCESS","initialState","isFetching","handleActions","_handleActions","defineProperty","state","objectSpread","appReducer","combineReducers","firstMileStoneReducer","sagaMiddleware","createSagaMiddleware","middleware","createLogger","applyMiddleware","store","createStore","rootReducer","compose","f","OuterBodyDataReceiver","dispatch","getState","v","Validator","this","getOuterBody","data","jsonCheck","validate","outerbodySchema","valid","errors","_context","t0","Promise","resolve","id","App","receive","className","OuterContainer_OuterContainer","Component","connect","ReactDOM","react","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.97607a08.chunk.js","sourcesContent":["export enum TextActionTypeEnum {\r\n  OPEN_URL = \"open-url\",\r\n  OPEN_APP = \"open-app\",\r\n  OPEN_MICROAPP = \"open-microapp\"\r\n}","import {\r\n  IActionOpenUrl,\r\n  IAction,\r\n} from \"./ApiInterfaces\";\r\nimport { TextActionTypeEnum } from \"./Enums\";\r\n\r\n/** Returns true if the action parameter is a ActionOpenUrl */\r\nexport const isActionOpenUrl = (\r\n  action:   IAction,\r\n): action is IActionOpenUrl => action.type === TextActionTypeEnum.OPEN_URL;\r\n\r\n/** Returns true if the action parameter is a Action */\r\nexport const isAction = (\r\n  action: IAction | undefined\r\n): action is IAction => {\r\n  return action !== undefined && (\r\n    isActionOpenUrl( action )\r\n  );\r\n};","export enum DetailTypeEnum {\r\n  TEXT = 'text',\r\n  IMAGE = 'image',\r\n  LIST = 'list'\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { isDetailText, isDetailImage, isDetailList } from \"./DetailGuard\";\r\n\r\ninterface DetailComponent {\r\n  detail: any;  \r\n}\r\n\r\nexport const DetailComponent: React.FC<DetailComponent> = ({\r\n  detail\r\n}) => {\r\n  return (\r\n    <div>\r\n      {(() => {\r\n        if (isDetailText(detail as any)) {\r\n          return <p>{detail.text}</p>\r\n        } else if (isDetailImage(detail as any)) {\r\n          return <Img src={detail.imageUrl} alt=\"\" />\r\n        } else if (isDetailList(detail as any)) {\r\n          const list = detail.texts as string[];\r\n          return (list.map((text, index) => <p key={index}>{text}</p>));\r\n        }\r\n      })()}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Img = styled.img``;","export enum RichTextTypeEnum {\r\n    RICHTEXT = \"rich-text\",\r\n}\r\n  ","import {\r\n  IDetailText, IDetailImage, IDetailList\r\n} from \"./ApiInterfaces\";\r\nimport { DetailTypeEnum } from \"./Enums\";\r\n\r\n/** Returns true if the action parameter is a TileActionOpenUrl */\r\nexport const isTextDetailOpenUrl = (\r\n  detail:   IDetailText,\r\n): detail is IDetailText => detail.type === DetailTypeEnum.TEXT;\r\n\r\n/** Returns true if the action parameter is a DetailText */\r\nexport const isDetailText = (\r\n  detailText: IDetailText | undefined\r\n): detailText is IDetailText => detailText !== undefined && detailText.type === DetailTypeEnum.TEXT;\r\n\r\n/** Returns true if the action parameter is a DetailImage */\r\nexport const isDetailImage = (\r\n  detailImage: IDetailImage | undefined\r\n): detailImage is IDetailImage => detailImage !== undefined && detailImage.type === DetailTypeEnum.IMAGE;\r\n\r\n/** Returns true if the action parameter is a DetailList */\r\nexport const isDetailList = (detailList: IDetailList | undefined\r\n): detailList is IDetailList => detailList !== undefined && detailList.type === DetailTypeEnum.LIST;\r\n","import React from \"react\";\r\nimport { IDetailText, IDetailImage, IDetailList } from 'components/DetailComponent/ApiInterfaces'\r\nimport { DetailComponent } from 'components/milestone';\r\n\r\n/**\r\n * Dummy function for async fetching of tile content\r\n * @return {Promise} Tile definition\r\n */\r\n\r\ninterface IDetailListItem {\r\n  detailData: IDetailText | IDetailImage | IDetailList;\r\n}\r\n\r\nexport const DetailListItem: React.FC<IDetailListItem> = ({ detailData }) => {\r\n  return (\r\n    <div>\r\n      <DetailComponent\r\n        detail={Object.assign(detailData)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { DetailListItem } from './DetailListItem';\r\n\r\ninterface Props {\r\n  details: any[];// IDetailText[] | IDetailImage[] | IDetailList[] \r\n}\r\nexport const DetailList: React.FC<Props> = ({details}) => {\r\n  return(\r\n    <div>\r\n      {details.length > 0 && details.map((DetailData, index)=>(\r\n        <DetailListItem detailData={DetailData} key={index}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailList } from \"containers/DetailContainer\";\r\nimport { isAction } from \"./../milestone\";\r\nimport { IRichText } from \"./ApiInterfaces\";\r\nimport { IAction } from \"./../ActionComponent/ApiInterfaces\";;\r\n\r\ninterface RichTextComponent {\r\n  richtext: IRichText;\r\n  onClick: (event: React.MouseEvent<HTMLElement>, action: IAction) => void;\r\n}\r\n\r\n/**\r\n * Responsible for rendering and event propagation. This component should\r\n * not perform any API calls, nor directly interfere with the global application\r\n * state. Rather, all events and call-to-actions must be handled by a parent\r\n * component.\r\n * @param  {func} options.onClick The parent component's handler for click events\r\n * @param {string} options.richtext - The richtext title\r\n */\r\nexport const RichTextComponent: React.FC<RichTextComponent> = ({\r\n  onClick: onClickPropFn,\r\n  richtext\r\n}) => {\r\n  const onDetailclick = (event: React.MouseEvent<HTMLElement>): void => {\r\n    event.stopPropagation();\r\n    const details = richtext.details as any[];\r\n    setDetails(details);\r\n  };\r\n  const [details, setDetails] = useState<any[]>([]);\r\n  return (\r\n    <DIV1>\r\n      <DIV\r\n        onClick={\r\n          (() => {            \r\n            if (isAction(richtext.onClick)) {\r\n                const {\r\n                  onClick: onClickApi\r\n                } = richtext;\r\n                return (event: React.MouseEvent<HTMLElement>) => onClickPropFn(event, onClickApi);\r\n              }\r\n          })()\r\n        }>\r\n        <H3>{richtext.title}</H3>\r\n        <P onClick={onDetailclick}>\r\n            {richtext.thumbnailUrl && <Img src={richtext.thumbnailUrl} alt=\"\" />}\r\n            {richtext.text}\r\n        </P>\r\n      </DIV>\r\n      {details && <DetailList details={details}/>}\r\n    </DIV1>\r\n  );\r\n};\r\n\r\nconst DIV1 = styled.div`\r\n  width: 100%;\r\n`\r\nconst H3 = styled.h3`\r\n  display: inline-flex;  \r\n`;\r\nconst DIV = styled.div`\r\n  float: left;\r\n  display: inline-grid;\r\n`;\r\nconst P = styled.p`\r\n  text-align: left;\r\n`\r\nconst Img = styled.img`\r\n  src: url(${props => props.src});\r\n  float: left;\r\n  margin-right: 15px;\r\n  width: 100px;\r\n  height: 100px;\r\n`","export enum RowTypeEnum {\r\n    TEXT = \"text\",\r\n    TEXT_AREA = \"text-area\",\r\n}\r\n\r\n  ","\r\nimport {ITextArea, IText, Row} from \"./ApiInterfaces\";\r\nimport { RowTypeEnum } from \"./Enums\";\r\n  \r\n  /** Returns true if the action parameter is a TextArea */\r\n  export const isTextArea = (\r\n    textDefinition: ITextArea | undefined\r\n  ): textDefinition is ITextArea => textDefinition !== undefined && textDefinition.type === RowTypeEnum.TEXT_AREA;\r\n\r\n  export const isTextTile = (\r\n    text: IText | undefined\r\n  ): text is IText => text !== undefined && text.type === RowTypeEnum.TEXT;\r\n\r\n  export const isValidRow = (\r\n    row: Row | undefined\r\n  ): row is Row => row !== undefined && ((row.type === RowTypeEnum.TEXT || row.type === RowTypeEnum.TEXT_AREA))\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {ITextArea} from '../../components/Row/ApiInterfaces'\r\nimport {TextAreaModule} from '../../components/milestone';\r\n\r\ninterface ITextAreaListItem {\r\n  textData: ITextArea;\r\n}\r\n\r\nexport const TextAreaListItem: React.FC<ITextAreaListItem> = ({ textData }) => {\r\n  return (\r\n    <DIV>\r\n      <TextAreaModule        \r\n        textarea={Object.assign(textData)}\r\n      />\r\n    </DIV>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  text-align: left;\r\n  margin-top: 10px;\r\n`\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DetailList } from \"containers/DetailContainer\";\r\nimport { IText } from \"./ApiInterfaces\";\r\nimport { IAction } from \"../ActionComponent/ApiInterfaces\";\r\nimport { isAction } from \"../milestone\";\r\n\r\ninterface Text {\r\n  text: IText;\r\n  onClick: (event: React.MouseEvent<HTMLElement>, action: IAction) => void;\r\n}\r\n\r\n/**\r\n * Responsible for rendering and event propagation. This component should\r\n * not perform any API calls, nor directly interfere with the global application\r\n * state. Rather, all events and call-to-actions must be handled by a parent\r\n * component.\r\n * @param  {func} options.onClick The parent component's handler for click events\r\n * @param {string} options.text - The text\r\n */\r\nexport const TextModule: React.FC<Text> = ({\r\n  onClick: onClickPropFn,\r\n  text\r\n}) => {\r\n  const onDetailclick = (event: React.MouseEvent<HTMLElement>): void => {\r\n    event.stopPropagation();\r\n    const details = text.details as any[];\r\n    setDetails(details);\r\n  };\r\n  const [details, setDetails] = useState<any[]>([]);\r\n  return (\r\n    <DIV>\r\n      <Text\r\n        onClick={\r\n          (() => {\r\n            if (isAction(text.onClick)) {\r\n              const {\r\n                onClick: onClickApi\r\n              } = text;\r\n              return (event: React.MouseEvent<HTMLElement>) => onClickPropFn(event, onClickApi);\r\n            }\r\n          })()\r\n        }>\r\n        <H3>{text.title}</H3>\r\n        <P onClick={onDetailclick}>\r\n          {text.thumbnailUrl && <Img src={text.thumbnailUrl} alt=\"\" />}\r\n          {text.text}\r\n        </P>\r\n      </Text>\r\n      {details && <DetailList details={details}/>}\r\n    </DIV>\r\n  );\r\n};\r\n\r\nconst DIV = styled.div`\r\n  width: 100%;\r\n`\r\nconst H3 = styled.h3`\r\n  display: inline-flex;  \r\n`;\r\nconst Text = styled.div`\r\n  float: left;\r\n  display: inline-grid;\r\n`;\r\nconst P = styled.p`\r\n  text-align: left;\r\n`\r\nconst Img = styled.img`\r\n  src: url(${props => props.src});\r\n  float: left;\r\n  margin-right: 15px;\r\n  width: 100px;\r\n  height: 100px;\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ITextArea } from \"./ApiInterfaces\";\r\n\r\ninterface TextArea {\r\n  textarea: ITextArea;  \r\n}\r\n\r\n/**\r\n * Responsible for rendering and event propagation. This component should\r\n * not perform any API calls, nor directly interfere with the global application\r\n * state. Rather, all events and call-to-actions must be handled by a parent\r\n * component.\r\n * @param {string} options.text - The text area\r\n */\r\nexport const TextAreaModule: React.FC<TextArea> = ({\r\n  textarea\r\n}) => {\r\n  return (\r\n    <TextArea>\r\n      {textarea.text}\r\n    </TextArea>\r\n  );\r\n};\r\n\r\nconst TextArea = styled.textarea`    \r\n    min-height: 100px;\r\n    max-height: 500px;\r\n    line-height: 21px;\r\n    width: 50%;\r\n    resize: vertical;\r\n    box-sizing: border-box;\r\n\r\n    border: 1px solid rgb(217, 217, 217);\r\n    padding: 4px 11px;\r\n    text-size-adjust: 100%;\r\n`;","import React from \"react\";\r\nimport { IText } from \"components/Row/ApiInterfaces\";\r\nimport { IAction } from \"components/ActionComponent/ApiInterfaces\";\r\nimport {\r\n  isActionOpenUrl, TextModule\r\n} from \"components/milestone\";\r\n\r\ninterface ITextListItem {\r\n  textData: IText;\r\n}\r\n\r\nexport const TextListItem: React.FC<ITextListItem> = ({ textData }) => {\r\n  const onClick = (event: React.MouseEvent<HTMLElement>, action: IAction): void => {\r\n    event.preventDefault();\r\n\r\n    if (isActionOpenUrl(action)) {\r\n      window.location.href = action.url;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextModule\r\n        onClick={onClick}\r\n        text={Object.assign(textData)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TextListItem } from \"containers/TextContainer\";\r\nimport { TextAreaListItem } from \"containers/TextAreaContainer\";\r\nimport { isTextTile, isTextArea } from \"./../milestone\";\r\n\r\ninterface OuterComponent {\r\n  row: any;  \r\n}\r\n/**\r\n * Responsible for rendering and event propagation. This component should\r\n * not perform any API calls, nor directly interfere with the global application\r\n * state. Rather, all events and call-to-actions must be handled by a parent\r\n * component.\r\n * @param {object} options.row - This can be either a Text, Text-Area\r\n */\r\nexport const OuterComponent: React.FC<OuterComponent> = ({\r\n  row\r\n}) => {\r\n  return (\r\n    <div>\r\n      {(() => {\r\n        if (isTextTile(row as any)) {\r\n          return <TextListItem textData={row} />\r\n        } else if (isTextArea(row as any)) {\r\n          return <TextAreaListItem textData={row}/>\r\n        }\r\n      })()}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { ISection } from 'components/OuterBodyComponent/ApiInterfaces';\r\nimport { OuterComponent } from \"components/OuterBodyComponent/OuterComponent\";\r\n\r\ninterface ISectionList {\r\n  section: ISection\r\n}\r\nconst SectionList: React.FC<ISectionList> = ({ section }) => {\r\n  const rows = section.rows as any[];\r\n  return (\r\n    <StyledButton>\r\n      <P>{section.header}</P>\r\n      {rows.map((row, index) => {\r\n        return <OuterComponent row={row} key={index} />\r\n      })}\r\n    </StyledButton>\r\n  )\r\n}\r\nconst P = styled.p`\r\n  color: gray;\r\n  text-align: left;\r\n  margin: 0 auto;\r\n`;\r\nconst StyledButton = styled.button`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  width: 400px;\r\n`;\r\nexport default SectionList","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IOuterBody } from \"components/OuterBodyComponent/ApiInterfaces\";\r\nimport SectionList from \"./SectionList\";\r\n\r\ninterface Props {\r\n  outerbody: IOuterBody;\r\n}\r\n\r\nexport const OuterContainer: React.FC<Props> = ({ outerbody }) => {\r\n  return (\r\n    <DIV>\r\n      <H1>{outerbody && outerbody.title}</H1>\r\n      {outerbody && outerbody.sections && outerbody.sections.map((section, idx) => \r\n        <SectionList section={section} key={idx} />\r\n      )}\r\n    </DIV>\r\n  )\r\n}\r\nconst H1 = styled.h2`    \r\n`;\r\nconst DIV = styled.div`\r\n  text-align: center;\r\n`","import {IOuterBody} from \"../ApiInterfaces\";\r\n\r\nexport const OUTERBODY_REQUEST = 'outerbody/REQUEST'\r\n\r\nexport function requestOuterBody() {\r\n  return {\r\n    type: OUTERBODY_REQUEST\r\n  }\r\n}\r\n\r\nexport const OUTERBODY_ERROR = 'outerbody/ERROR'\r\n\r\nexport function errorOuterBody(error: any) {\r\n  return {\r\n    type: OUTERBODY_ERROR,\r\n    payload: { error }\r\n  }\r\n}\r\n\r\nexport const OUTERBODY_SUCCESS = 'outerbody/SUCCESS'\r\n\r\n/* export interface MilestonePayload {\r\n  milestone: IOuterBody\r\n} */\r\nexport function receiveOuterBody(outerbody: IOuterBody) {\r\n  return {\r\n    type: OUTERBODY_SUCCESS,\r\n    payload: outerbody\r\n  }\r\n}\r\n","import { Action, handleActions } from \"redux-actions\";\r\nimport { ErrorPayload } from \"common/payloads/ErrorActionPayload\";\r\nimport {\r\n  OUTERBODY_ERROR,\r\n  OUTERBODY_REQUEST,\r\n  OUTERBODY_SUCCESS\r\n} from \"../actions/OuterBody\";\r\n\r\nimport { IOuterBody } from '../ApiInterfaces';\r\n\r\nexport interface OuterBodyState {\r\n  isFetching: boolean,\r\n  outerbody: IOuterBody,\r\n  error?: any,\r\n}\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  outerbody: {} as IOuterBody,\r\n  error: undefined\r\n} as OuterBodyState\r\n\r\nfunction handleRequest(state: OuterBodyState) {\r\n  return {\r\n    ...state,\r\n    isFetching: true,\r\n    error: undefined as any\r\n  }\r\n}\r\n\r\nfunction handleError(state: OuterBodyState, action: Action<ErrorPayload>) {\r\n  return {\r\n    ...state,\r\n    isFetching: false,\r\n    error: action.payload.error\r\n  }\r\n}\r\n\r\nfunction handleSuccess(state: OuterBodyState, action: Action<IOuterBody>) {\r\n  return {\r\n    ...state,\r\n    isFetching: false,\r\n    outerbody: action.payload,\r\n    error: undefined as any\r\n  }\r\n}\r\n\r\nexport default handleActions<OuterBodyState>(\r\n  {\r\n    [OUTERBODY_REQUEST]: handleRequest,\r\n    [OUTERBODY_ERROR]: handleError,\r\n    [OUTERBODY_SUCCESS]: handleSuccess\r\n  } as any,\r\n  initialState\r\n)\r\n","import {combineReducers} from \"redux\";\r\nimport firstMileStoneReducer, { OuterBodyState } from \"./components/OuterBodyComponent/reducers/OuterBody\";\r\n\r\nexport interface State {\r\n  outerbody: OuterBodyState\r\n}\r\nconst appReducer = combineReducers({\r\n  outerbody: firstMileStoneReducer\r\n});\r\n\r\nexport default appReducer","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers';\r\n\r\ndeclare global {\r\n  interface Window { \r\n    __REDUX_DEVTOOLS_EXTENSION__: any;\r\n  }\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const loggerMiddleware = createLogger()\r\n\r\nexport const middleware = process.env.NODE_ENV === 'development'\r\n  ? applyMiddleware(\r\n    sagaMiddleware,\r\n    loggerMiddleware\r\n  )\r\n  : applyMiddleware(sagaMiddleware)\r\n\r\nexport const store = createStore(rootReducer,\r\n  compose(\r\n    middleware,\r\n    process.env.NODE_ENV === 'development' &&\r\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f: any) => f\r\n  ),\r\n);\r\n","import { store } from \"store\";\r\nimport { State } from \"reducers\";\r\nimport { Validator } from \"jsonschema\";\r\nimport { RowTypeEnum } from \"../../milestone\";\r\nimport { requestOuterBody, receiveOuterBody, errorOuterBody } from \"../actions/OuterBody\";\r\nimport { IOuterBody } from \"../ApiInterfaces\";\r\nimport outerbodySchema from \"./OuterBodySchema.json\";\r\n\r\nexport default class OuterBodyDataReceiver {\r\n  public async receive() {\r\n    const dispatch = store.dispatch;\r\n    const state = store.getState() as State;\r\n    var v = new Validator();\r\n\r\n    if (state.outerbody.outerbody) {\r\n      dispatch(requestOuterBody());\r\n      try {\r\n        const data = await this.getOuterBody();\r\n        const jsonCheck = v.validate(data, outerbodySchema);\r\n        if (jsonCheck.valid) {\r\n          dispatch(receiveOuterBody(data));\r\n        } else {\r\n          dispatch(errorOuterBody(jsonCheck.errors));\r\n        }\r\n      } catch (error) {\r\n        dispatch(errorOuterBody(error));\r\n      }\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /**\r\n   * Dummy function for async fetching of milestone component\r\n   * @return {[type]} [description]\r\n   */\r\n  private async getOuterBody(): Promise<any> {\r\n    return new Promise(resolve => {\r\n      resolve({\r\n        id: \"main\",\r\n        title: \"My test app\",\r\n        sections: [\r\n          {\r\n            header: \"First section\",\r\n            rows: [\r\n              {\r\n                /*  type: TextAreaTypeEnum.TEXT, */\r\n                type: RowTypeEnum.TEXT,\r\n                title: \"First test row\",\r\n                text: \"Foobar\"\r\n                //thumbnailUrl: 'https://cdn.vidyard.com/thumbnails/50347/OUPa5LTKV46849sLYngMqQ.jpg',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      });\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"reducers\";\r\nimport { OuterContainer } from \"containers/OuterContainer\";\r\nimport OuterBodyDataReceiver from \"components/OuterBodyComponent/dataReceiver/OuterBody\";\r\nimport { IOuterBody } from \"components/OuterBodyComponent/ApiInterfaces\";\r\n\r\ninterface Props {\r\n  outerbody: IOuterBody;\r\n}\r\n\r\nclass App extends Component<Props> {\r\n\r\n  public componentDidMount() {\r\n    (new OuterBodyDataReceiver()).receive();\r\n  }\r\n  render() {\r\n    const {outerbody} = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <OuterContainer outerbody={outerbody}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect((state: State) => ({\r\n  outerbody: state.outerbody.outerbody\r\n}))(App);\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\ndocument.getElementById('root'));\r\n\r\n"],"sourceRoot":""}